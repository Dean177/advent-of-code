-- Haskell Playground 1.0
puzzleInput = zipWithIndex $ parse "14 0 15 12 11 11 3 5 1 6 8 4 9 1 8 4"
--puzzleInput = zipWithIndex $ parse "0 2 7 0"

initialState = PState{
  _count=0,
  _memory = puzzleInput,
  _previousStates=Set.empty,
  _previousSeq=Seq.empty 
  }
  
snd <$> _memory initialState

endState = snd $ solve (False, initialState)

_count endState 
_memory endState
_previousSeq endState
lastSeq = _previousSeq endState

Seq.length (_previousSeq endState)
Seq.findIndexL (== _memory endState) lastSeq